(()=>{"use strict";var r={28:(r,e,n)=>{n.d(e,{Z:()=>l});var t=n(537),o=n.n(t),a=n(645),i=n.n(a)()(o());i.push([r.id,"body {\r\n}\r\n\r\n.modalButton {\r\n  font-size: 1.3rem;\r\n}\r\n\r\n#main {\r\n  gap: 3rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n#content {\r\n  display: flex;\r\n  gap: 8rem;\r\n}\r\n\r\n.board {\r\n  background-color: white;\r\n  border: 1px solid black;\r\n  display: grid;\r\n  grid-template-rows: repeat(10, 1fr);\r\n  width: 400px;\r\n  height: 400px;\r\n  grid-row: 1/2;\r\n}\r\n\r\n.announcer {\r\n  font-size: 2rem;\r\n}\r\n\r\n.row-p1,\r\n.row-p2 {\r\n  display: grid;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  border: 1px solid rgb(30, 30, 30);\r\n}\r\n\r\n.cell-p1,\r\n.cell-p2 {\r\n  border: 1px solid rgb(30, 30, 30);\r\n}\r\n\r\n.hit {\r\n  background-color: black;\r\n}\r\n\r\n.hitOwn {\r\n  background-color: blue;\r\n}\r\n\r\n.miss {\r\n  background-color: red;\r\n}\r\n\r\n.hide {\r\n  display: none;\r\n}\r\n\r\n#modalContainer {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  display: none;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  text-align: center;\r\n}\r\n\r\n.modal {\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 15px;\r\n  padding: 30px;\r\n  background-color: #e8e8e8;\r\n  margin: 10%;\r\n  border-radius: 1em;\r\n}\r\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;AACA;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,SAAS;EACT,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,SAAS;AACX;;AAEA;EACE,uBAAuB;EACvB,uBAAuB;EACvB,aAAa;EACb,mCAAmC;EACnC,YAAY;EACZ,aAAa;EACb,aAAa;AACf;;AAEA;EACE,eAAe;AACjB;;AAEA;;EAEE,aAAa;EACb,sCAAsC;EACtC,iCAAiC;AACnC;;AAEA;;EAEE,iCAAiC;AACnC;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;EACf,UAAU;EACV,OAAO;EACP,MAAM;EACN,aAAa;EACb,oCAAoC;EACpC,kBAAkB;AACpB;;AAEA;EACE,oBAAoB;EACpB,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;EACT,aAAa;EACb,yBAAyB;EACzB,WAAW;EACX,kBAAkB;AACpB",sourcesContent:["body {\r\n}\r\n\r\n.modalButton {\r\n  font-size: 1.3rem;\r\n}\r\n\r\n#main {\r\n  gap: 3rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n#content {\r\n  display: flex;\r\n  gap: 8rem;\r\n}\r\n\r\n.board {\r\n  background-color: white;\r\n  border: 1px solid black;\r\n  display: grid;\r\n  grid-template-rows: repeat(10, 1fr);\r\n  width: 400px;\r\n  height: 400px;\r\n  grid-row: 1/2;\r\n}\r\n\r\n.announcer {\r\n  font-size: 2rem;\r\n}\r\n\r\n.row-p1,\r\n.row-p2 {\r\n  display: grid;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  border: 1px solid rgb(30, 30, 30);\r\n}\r\n\r\n.cell-p1,\r\n.cell-p2 {\r\n  border: 1px solid rgb(30, 30, 30);\r\n}\r\n\r\n.hit {\r\n  background-color: black;\r\n}\r\n\r\n.hitOwn {\r\n  background-color: blue;\r\n}\r\n\r\n.miss {\r\n  background-color: red;\r\n}\r\n\r\n.hide {\r\n  display: none;\r\n}\r\n\r\n#modalContainer {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  display: none;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  text-align: center;\r\n}\r\n\r\n.modal {\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 15px;\r\n  padding: 30px;\r\n  background-color: #e8e8e8;\r\n  margin: 10%;\r\n  border-radius: 1em;\r\n}\r\n"],sourceRoot:""}]);const l=i},645:r=>{r.exports=function(r){var e=[];return e.toString=function(){return this.map((function(e){var n="",t=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),t&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=r(e),t&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(r,n,t,o,a){"string"==typeof r&&(r=[[null,r,void 0]]);var i={};if(t)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(i[s]=!0)}for(var c=0;c<r.length;c++){var d=[].concat(r[c]);t&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:r=>{r.exports=function(r){var e=r[1],n=r[3];if(!n)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=n.sources.map((function(r){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(r," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:r=>{var e=[];function n(r){for(var n=-1,t=0;t<e.length;t++)if(e[t].identifier===r){n=t;break}return n}function t(r,t){for(var a={},i=[],l=0;l<r.length;l++){var s=r[l],c=t.base?s[0]+t.base:s[0],d=a[c]||0,u="".concat(c," ").concat(d);a[c]=d+1;var p=n(u),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(A);else{var h=o(A,t);t.byIndex=l,e.splice(l,0,{identifier:u,updater:h,references:1})}i.push(u)}return i}function o(r,e){var n=e.domAPI(e);n.update(r);return function(e){if(e){if(e.css===r.css&&e.media===r.media&&e.sourceMap===r.sourceMap&&e.supports===r.supports&&e.layer===r.layer)return;n.update(r=e)}else n.remove()}}r.exports=function(r,o){var a=t(r=r||[],o=o||{});return function(r){r=r||[];for(var i=0;i<a.length;i++){var l=n(a[i]);e[l].references--}for(var s=t(r,o),c=0;c<a.length;c++){var d=n(a[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=s}}},569:r=>{var e={};r.exports=function(r,n){var t=function(r){if(void 0===e[r]){var n=document.querySelector(r);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(r){n=null}e[r]=n}return e[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(n)}},216:r=>{r.exports=function(r){var e=document.createElement("style");return r.setAttributes(e,r.attributes),r.insert(e,r.options),e}},565:(r,e,n)=>{r.exports=function(r){var e=n.nc;e&&r.setAttribute("nonce",e)}},795:r=>{r.exports=function(r){var e=r.insertStyleElement(r);return{update:function(n){!function(r,e,n){var t="";n.supports&&(t+="@supports (".concat(n.supports,") {")),n.media&&(t+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(t+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),t+=n.css,o&&(t+="}"),n.media&&(t+="}"),n.supports&&(t+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,r,e.options)}(e,r,n)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(e)}}}},589:r=>{r.exports=function(r,e){if(e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}}},e={};function n(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return r[t](a,a.exports,n),a.exports}n.n=r=>{var e=r&&r.__esModule?()=>r.default:()=>r;return n.d(e,{a:e}),e},n.d=(r,e)=>{for(var t in e)n.o(e,t)&&!n.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:e[t]})},n.o=(r,e)=>Object.prototype.hasOwnProperty.call(r,e),n.nc=void 0,(()=>{var r=n(379),e=n.n(r),t=n(795),o=n.n(t),a=n(569),i=n.n(a),l=n(565),s=n.n(l),c=n(216),d=n.n(c),u=n(589),p=n.n(u),A=n(28),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=d();e()(A.Z,h);A.Z&&A.Z.locals&&A.Z.locals;const f=()=>{let r=[],e=[],n=[],t=[];(()=>{for(let e=0;e<10;e++){r[e]=[];for(let n=0;n<10;n++)r[e].push(!1)}})();const o=(e,n)=>{const t=(t,o)=>{e+t>9||e+t<0||!1===r[e+t][n+o]&&(r[e+t][n+o]="reserved")},o=r=>{t(r,-1),t(r,0),t(r,1)};o(-1),o(0),o(1)};return{board:r,placeShip:(e,t,a,i)=>{if(r[e][t])return;let l=0;if("h"===i){if(a.length+t>10)return!1;for(let n=0;n<a.length;n++)if("reserved"===r[e][t+n])return!1;n.push([e,t]);for(let n=t;n<t+a.length;n++)r[e][n]={ship:a,pos:l},o(e,t+l),l++;return!0}if("v"===i){if(a.length+e>10)return!1;for(let n=0;n<a.length;n++)if("reserved"===r[e+n][t])return!1;n.push([e,t]);for(let n=e;n<e+a.length;n++)r[n][t]={ship:a,pos:l},o(e+l,t),l++;return!0}},missedShots:e,receiveAttack:(n,o)=>"reserved"===r[n][o]?(e.push([n,o]),"nothing"):r[n][o]&&"missed"!==r[n][o]?(r[n][o].ship.hit(r[n][o].pos),t.push([n,o]),"hit"):(e.push([n,o]),r[n][o]="missed","miss"),placedShips:n,allShipsSunk:()=>{let e=!0;return n.forEach((n=>{r[n[0]][n[1]].ship.isSunk()||(e=!1)})),e},hitShots:t}},m=r=>{const e={name:r,board:f(),turn:!1,setTurn:r=>{e.turn=!0,r.turn=!1}};return e},b=r=>{let e=r,n=[];return{length:e,hits:n,hit:r=>{r>e||n.includes(r)||n.push(r)},isSunk:()=>n.length===e}},g=[null,b(5),b(4),b(3),b(3),b(2)],v=(r,e)=>{const n=document.querySelector(".announcer");!0===r.turn?n.innerHTML="Turno del jugador 1":n.innerHTML="Turno del jugador 2"},E=()=>{document.querySelector(".announcer").innerHTML="Fin de la partida",console.log("work")};function C(r,e){let n,t,o;for(n=0;n<r.length;++n)if(e.length===r[n].length){for(o=r[n],t=0;t<e.length&&e[t]===o[t];++t);if(t===e.length)return!0}return!1}const y=r=>{for(let e=0;e<10;e++)for(let n=0;n<10;n++)"reserved"!==r[e][n]&&!1!==r[e][n]&&document.getElementById(`p1-row${e}-cell${n}`).classList.add("hit")},B=document.querySelector("#shipSelector"),S=document.querySelector(".modalButton"),x=document.querySelector("#modalContainer"),k=(r,e)=>{0===B.options.length&&(x.style.display="none",S.classList.add("hide"),r.setTurn(e),v(r,e))};const w=async(r,e)=>{var n;let t,o;await(n=700,new Promise((r=>{setTimeout((()=>{r(2)}),n)})));do{t=Math.floor(10*Math.random()),o=Math.floor(10*Math.random())}while(!0===C(r.board.missedShots,[t,o])||!0===C(r.board.hitShots,[t,o]));"hit"!==r.board.receiveAttack(t,o)?document.getElementById(`p1-row${t}-cell${o}`).classList.add("miss"):document.getElementById(`p1-row${t}-cell${o}`).classList.add("hitOwn"),r.board.allShipsSunk()?(r.turn=!1,e.turn=!1,E()):(r.setTurn(e),v(r,e))},M=m("p1"),I=m("p2");((r,e)=>{for(let e=0;e<10;e++){let n=document.createElement("div");n.classList.add("row-p1"),n.setAttribute("id",`p1-row${e}`),document.getElementById("board1").appendChild(n),r.board.board[e].forEach(((r,t)=>{let o=document.createElement("div");o.classList.add("cell-p1"),o.setAttribute("id",`p1-row${e}-cell${t}`),n.appendChild(o)}))}for(let n=0;n<10;n++){let t=document.createElement("div");t.classList.add("row-p2"),t.setAttribute("id",`p2-row${n}`),document.getElementById("board2").appendChild(t),e.board.board[n].forEach(((o,a)=>{let i=document.createElement("div");i.classList.add("cell-p2"),i.setAttribute("id",`p2-row${n}-cell${a}`),t.appendChild(i),i.addEventListener("click",(t=>{if(!0===r.turn&&!1===C(e.board.missedShots,[n,a])&&!1===C(e.board.hitShots,[n,a])){let o=e.board.receiveAttack(n,a);"hit"===o&&t.target.classList.add("hit"),"hit"!==o&&t.target.classList.add("miss"),e.board.allShipsSunk()?(r.turn=!1,e.turn=!1,E()):(e.setTurn(r),v(r,e),w(r,e))}}))}))}})(M,I);const T=document.querySelector("#modalContainer"),L=document.querySelector(".modalButton"),q=document.querySelector("#xSelector"),$=document.querySelector("#ySelector"),j=document.querySelector("#addButton"),N=document.querySelector("#orientation"),O=document.querySelector("#shipSelector");L.addEventListener("click",(()=>{T.style.display="block",(r=>{const e=["v","h"];for(let n=0;n<6;n++)for(;r.placedShips.length!==n;)r.placeShip(Math.floor(10*Math.random()),Math.floor(10*Math.random()),g[n],e[Math.floor(Math.random()*e.length)])})(I.board),console.log(I.board),M.setTurn(I)})),j.addEventListener("click",(()=>{if(0!==q.value.length&&0!==$.value.length&&!isNaN(q.value)&&!isNaN($.value))switch(O.value){case"carrier":if(M.board.placeShip(parseInt(q.value),parseInt($.value),b(5),N.value)){for(let r=0;r<O.length;r++)"carrier"==O.options[r].value&&O.remove(r);y(M.board.board),k(M,I)}break;case"battleship":if(M.board.placeShip(parseInt(q.value),parseInt($.value),b(4),N.value)){for(let r=0;r<O.length;r++)"battleship"==O.options[r].value&&O.remove(r);y(M.board.board),k(M,I)}break;case"destroyer":if(M.board.placeShip(parseInt(q.value),parseInt($.value),b(3),N.value)){for(let r=0;r<O.length;r++)"destroyer"==O.options[r].value&&O.remove(r);y(M.board.board),k(M,I)}break;case"submarine":if(M.board.placeShip(parseInt(q.value),parseInt($.value),b(3),N.value)){for(let r=0;r<O.length;r++)"submarine"==O.options[r].value&&O.remove(r);y(M.board.board),k(M,I)}break;case"patrol":if(M.board.placeShip(parseInt(q.value),parseInt($.value),b(2),N.value)){for(let r=0;r<O.length;r++)"patrol"==O.options[r].value&&O.remove(r);y(M.board.board),k(M,I)}}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,